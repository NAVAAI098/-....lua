if not game: IsLoaded() then game. Loaded:Wait() end

repeat task.wait() until game:GetService("Players")
repeat task.wait() until game:GetService("Players").LocalPlayer
repeat task.wait() until game:GetService( "ReplicatedStorage")
repeat task.wait() until game:GetService( "ReplicatedFirst")
local lgh =  game:GetService("Lighting")
sethiddenproperty(lgh,"Technology",2)
lgh.FogStart = 1/0
lgh.FogEnd = 1/0

for i,v in ipairs(lgh:GetChildren()) do
    if v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("SunRaysEffect") or v:IsA("DepthOfFieldEffect") then
        v.Enabled = false
    end
end

-- [Terrain]
local wsc = game:GetService("Workspace")
wsc.Terrain.CastShadow = false
wsc.Terrain.WaterReflectance = 0
wsc.Terrain.WaterWaveSize = 0
wsc.Terrain.WaterTransparency = 0
wsc.Terrain.WaterWaveSpeed = 0
sethiddenproperty(wsc, 'StreamingTargetRadius', 64)
sethiddenproperty(wsc, 'StreamingPauseMode', 2)
sethiddenproperty(wsc.Terrain, 'Decoration', false)

-- [Disabled]

local boostmap = function(v)
    if v:IsA("Shirt") or v:IsA("Pants") then
        v[v.ClassName.."Template"] = ""
    elseif v:IsA("MeshPart") then
        v.TextureID = ""
    elseif v:IsA("BasePart") then
        v.Material = Enum.Material.SmoothPlastic
        v.Reflectance = 0
        v.CastShadow = false
    elseif v:IsA("SpecialMesh") then
        v.TextureId = 0 
    elseif v:IsA("Texture") or v:IsA("Decal") then
        v.Texture = ""
        v.Transparency = 1
    elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
        v.Enabled = false
        v.Lifetime = NumberRange.new(0)
    elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") or v:IsA("PostEffect") then
        v.Enabled = false
    elseif v:IsA("ShirtGraphic") then
        v.Graphic = ''
    elseif v:IsA("Model") then
        sethiddenproperty(v, 'LevelOfDetail', 1)
    end
end
for i,v in pairs(wsc:GetDescendants()) do
    pcall(boostmap,v)
end
wsc.DescendantAdded:Connect(function(v)
    pcall(boostmap,v)
end)

-- [Settings]
--game:GetService("NetworkClient"):SetOutgoingKBPSLimit(100)
settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
settings().Rendering.MeshPartDetailLevel = Enum.MeshPartDetailLevel.Level01
settings().Rendering.EagerBulkExecution = false

settings().Network.IncomingReplicationLag = -1000
settings().Physics.PhysicsEnvironmentalThrottle = 1

UserSettings():GetService("UserGameSettings").MasterVolume = 0
UserSettings():GetService("UserGameSettings").SavedQualityLevel = Enum.SavedQualitySetting.QualityLevel1
local function AutoEquip()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not humanoid then
        return
    end
    local playerStats = game:GetService("ReplicatedStorage"):FindFirstChild("playerstats")
    if not playerStats then
        return
    end
    local rodsFolder = playerStats:FindFirstChild(player.Name)
    if not rodsFolder or not rodsFolder:FindFirstChild("Rods") then
        return
    end
    local RunService = game:GetService("RunService")
    RunService.Heartbeat:Connect(function()
        pcall(function()
            local backpack = player:FindFirstChild("Backpack")
            if backpack then
                for _, rod in ipairs(rodsFolder.Rods:GetChildren()) do
                    local tool = backpack:FindFirstChild(rod.Name)
                    if tool and not character:FindFirstChild(tool.Name) then
                        humanoid:EquipTool(tool)
                    end
                end
            end
        end)
    end)
end

local function AutoEquip2()
    local player = game:GetService("Players").LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local playerStats = game:GetService("ReplicatedStorage"):FindFirstChild("playerstats")

    if not playerStats then
        warn("playerstats not found in ReplicatedStorage.")
        return
    end

    local rodsFolder = playerStats:FindFirstChild(player.Name) and playerStats[player.Name]:FindFirstChild("Rods")
    if not rodsFolder then return end

    for _, rod in ipairs(rodsFolder:GetChildren()) do
        local events = game:GetService("ReplicatedStorage"):WaitForChild("events")
        if rodsFolder:FindFirstChild("Carbon Rod") and not rodsFolder:FindFirstChild("Rapid Rod") then
            events:WaitForChild("equiprod"):FireServer("Carbon Rod")
        elseif rodsFolder:FindFirstChild("Rapid Rod") and not rodsFolder:FindFirstChild("Trident Rod") then
            events:WaitForChild("equiprod"):FireServer("Rapid Rod")
        elseif rodsFolder:FindFirstChild("Trident Rod") then
            events:WaitForChild("equiprod"):FireServer("Trident Rod")
        end
    end
end

local function Reset2()
    local player = game:GetService("Players").LocalPlayer
    local playerName = player.Name
    local playerGui = player.PlayerGui
    local rods = game:GetService("ReplicatedStorage").playerstats[playerName].Rods:GetChildren()
    local rodsInWorld = workspace[playerName]:GetChildren()  -- เปลี่ยนชื่อเป็น rodsInWorld
    local character = player.Character

    for _, rod in pairs(rods) do
        for _, rodInWorld in pairs(rodsInWorld) do
            -- ตรวจสอบว่า bobber มีอยู่และไม่มี shakeui
            if rodInWorld:FindFirstChild("bobber") and not playerGui:FindFirstChild("shakeui") then
                wait(300)
                local rodTool = character:FindFirstChild(rod.Name)
                if rodTool then  -- ตรวจสอบว่า rod อยู่ในตัวละครก่อน
                    rodTool.events.reset:FireServer()
                end
            end
        end
    end
end

local function interact(path)
    if path then
        local guiService = game:GetService("GuiService")
        local virtualInputManager = game:GetService("VirtualInputManager")

        -- เลือกวัตถุใน GUI
        guiService.SelectedObject = path
        task.wait(0.01) -- รอเล็กน้อยให้ GUI ตอบสนอง

        -- ส่งการกดปุ่ม Return (Enter)
        virtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
        virtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)

        -- ยกเลิกการเลือกวัตถุ
        task.wait(0.01) -- รอเล็กน้อยก่อนรีเซ็ต
        guiService.SelectedObject = nil
    end
end

spawn(function()
    while wait(0.2) do
        pcall(function()
            if not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("shakeui") then
                game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(939.354431, -738.08197, 1457.44556, -0.991571009, -1.55779851e-08, 0.129564434, -1.45141978e-08, 1, 9.15472853e-09, -0.129564434, 7.19703941e-09, -0.991571009)
                local npc = workspace.world.npcs["Milo Merchant"]
                if npc then
                    npc:SetPrimaryPartCFrame(CFrame.new(939.741516, -738.085693, 1458.93274))
                end
                local virtualInput = game:GetService("VirtualInputManager")
                virtualInput:SendKeyEvent(true, Enum.KeyCode.E, false, game)
                wait(0.05)
                virtualInput:SendKeyEvent(false, Enum.KeyCode.E, false, game)
                wait(0.05)
                workspace:WaitForChild("world"):WaitForChild("npcs"):WaitForChild("Milo Merchant"):WaitForChild("merchant"):WaitForChild("sellall"):InvokeServer()
                if workspace.world.npcs:FindFirstChild("Milo Merchant") and not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("shakeui") then
                    local args = {
                        [1] = 100,
                        [2] = 1
                    }
                    game:GetService("Players").LocalPlayer.Character:FindFirstChild("Trident Rod").events.cast:FireServer(unpack(args))
                end
            end
            if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("shakeui") and game:GetService("Players").LocalPlayer.PlayerGui.shakeui.safezone.button:FindFirstChild("ripple") then
                interact(game:GetService("Players").LocalPlayer.PlayerGui.shakeui.safezone.button)
            elseif game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("reel") then
                game:GetService("ReplicatedStorage").events.reelfinished:FireServer(100,true)
            else
                game:GetService("Players").LocalPlayer.Character:FindFirstChild("Trident Rod").events.cast:FireServer(100,1)
            end
        end)
    end
end)


while wait(1) do
    pcall(function()
        if game:GetService("Players").LocalPlayer.PlayerGui.loading.Enabled == true then
            if game.PlaceId == 16732694052 then
                if game:GetService("Players").LocalPlayer.PlayerGui.loading.loading:FindFirstChild("skip") then
                    interact(game:GetService("Players").LocalPlayer.PlayerGui.loading.loading.skip)
                end
                if game:GetService("Players").LocalPlayer.PlayerGui.loading.Enabled == true then
                    game:GetService("VirtualInputManager"):SendMouseButtonEvent(10, 100, 0, true, nil, 1)
                    game:GetService("VirtualInputManager"):SendMouseButtonEvent(10, 100, 0, false, nil, 1)
                    return
                end
            end
        elseif game:GetService("Players").LocalPlayer.PlayerGui.loading.Enabled == false then
            AutoEquip2()
            AutoEquip()
            Reset2()
        end
    end)
end
